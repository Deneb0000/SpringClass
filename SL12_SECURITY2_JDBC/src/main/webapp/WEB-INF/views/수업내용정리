[수업내용정리] 

[ SL12_SECURITY ]
스프링 시큐리티 - 보안처리 p654

* 개발자가 할수있는 보안영역
  1) 인증 - id/pw로 접근
  2) 인가 - 접근권한처리
  3) UI 처리 - 화면에 출력되는 부분이 권한에 따라 다름.
  
   시큐리티가 필요한 URL 설계
   ㄱ. 게시판 글 쓰기 - 인증(로그인) O
       작성자 == 로그인한 계정(ID)
   ㄴ. 게시판 수정/삭제 - 작성자 확인, 관리자 권한 삭제는 가능
   ㄷ. 그 외의 요청들은 인증받지않아도 모든 사용자가 사용 가능.
   
   
  * (암기)      시큐리티 내부 구조(개요) *
	
	(1)  AuthenticationManager(인증관리자) - 가장 중요한 역할.
	                                         인증을 담당하는 객체
	                                         인터페이스
	                                         인증을 다양한 방식으로 인증 처리를 할 수 있도록 설계됨.
	                                         (책임자)
	
	(2)  ProviderManager(제공관리자) - 인증 처리를 AuthenticationProvider 객체를 이용해서
	  	 인증처리를 위임하는 역할. 인터페이스
	  	 
	(3)  AuthenticationProvider(인증제공자) - 실제 인증 처리를 하는 역할(실무자)
	
	*** 주로사용) (4)  UserDetailsService(사용자상세서비스) - 인증된 실제 사용자의 정보+권한 정보를 
	     처리해서 반환하는 객체. 인터페이스   
	   
	   (3) + (4) 직접 구현할 수 있다.    
   
  
  - 암호화기능 포함됨
  - 우리 스프링버전에 맞는거 검색해서 사용
  - 회원/비회원 인증에 따라 경로를 나누는 방법.
  - http 세션으로 인증상태 유지
  
  - 쿠키를 컨트롤러로 사용 가능?
  - 비회원도 세션을 쓰면 안되나
  - 다시 만드려면 어디부터?
  - 에이작스 처리는 어느부분 어디에서?
  - 
  
  
  [ 시큐리티 사용시 추가할 부분들 ]
  - 의존모듈 추가  
  pom.xml 에 추가 확인
   <dependency>
         <groupId>org.springframework.security</groupId>
         <artifactId>spring-security-web</artifactId>
         <version>${org.springframework-version}</version>
      </dependency>

      <dependency>
         <groupId>org.springframework.security</groupId>
         <artifactId>spring-security-config</artifactId>
         <version>${org.springframework-version}</version>
      </dependency>

      <dependency>
         <groupId>org.springframework.security</groupId>
         <artifactId>spring-security-core</artifactId>
         <version>${org.springframework-version}</version>
      </dependency>

      <!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-taglibs -->
      <dependency>
         <groupId>org.springframework.security</groupId>
         <artifactId>spring-security-taglibs</artifactId>
         <version>${org.springframework-version}</version>
      </dependency>
      
      ------------------
      
      security-context.xml 에
      
	   <!-- css, js, image, static(정적) 등등   보안 필터 체인 X -->
	   <security:http pattern="/static/**" security="none"></security:http>   
	   <security:http pattern="/design/**" security="none"></security:http>
	   <security:http pattern="/css/**" security="none"></security:http>
	   <security:http pattern="/js/**" security="none"></security:http>   
	   
	   <security:http> 
	      <security:form-login/>  
	   </security:http>   
	   
	   <security:authentication-manager> 
	   </security:authentication-manager>
   
   태그들 다 있어야함. 필수임
   
   http://www.springframework.org/schema/tx/spring-tx-4.3.xsd  4-3 이어야 오류 안남!! 4-2는 XXXX
      
      -------------------------------------
      
      web.xml에 추가(주석풀기)
      
      <filter>
       <filter-name>springSecurityFilterChain</filter-name>
       <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
       <filter-name>springSecurityFilterChain</filter-name>
       <url-pattern>/*</url-pattern>
    </filter-mapping> 
      
      --------------------------------
      
      security-context.xml 에 추가
      
       <!-- css, js, image, static(정적) 등등   보안 필터 체인 X -->
	   <security:http pattern="/static/**" security="none"></security:http>   
	   <security:http pattern="/design/**" security="none"></security:http>
	   <security:http pattern="/css/**" security="none"></security:http>
	   <security:http pattern="/js/**" security="none"></security:http>
	   
	   <security:http use-expressions="true"> 
	   
	   	  <security:intercept-url pattern="/customer/noticeReg.htm" access="isAuthenticated()"/>
	      <security:intercept-url pattern="/customer/noticeDel.htm" access="hasRole('ROLE_ADMIN')"/>
	      <security:intercept-url pattern="/**" access="permitAll" />
	      
	      <!-- 우리가 만든 로그인페이지 연결 : /joinus/login.htm -->
	      <security:form-login login-page="/joinus/login.htm"/>  
	      
	   </security:http>   
	   
	   <!-- 스프링 시큐리티 5버전부터는, 반드시 PasswordEncoder를 이용하여 비밀번호를 변경/저장 처리를 해야함. password 앞에 {noop} 을 넣어준다. -->
	   <!-- 인증 관리자 : 총괄책임자 -->
	   <security:authentication-manager>
	   		<!-- 인증제공자 : 실무자 --> 
	   		<security:authentication-provider>
	   			<!-- 유저정보를 메모리에 저장 (DB저장하는거 아님) -->
		   		<security:user-service>
		   			<!-- 유저 목록 -->
		   			<security:user name="hong" authorities="ROLE_USER"  password="{noop}1234"/>
		         	<security:user name="admin" authorities="ROLE_USER, ROLE_MANAGER, ROLE_ADMIN" password="{noop}1234"/>
		   		</security:user-service>
	   		</security:authentication-provider>
	   </security:authentication-manager>
	   
	   ---------------------------
	   
	   header.jsp 에 추가. 
	   로그인상태/비로그인상태 분기해서 회원정보 출력함
	   
	   <%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags"%>
	   
	   <!-- 시큐리티 처리!! -->
			<li>
				<sec:authorize access="isAnonymous()">
					<a href="${ pageContext.request.contextPath }/joinus/login.htm"></a>
				</sec:authorize>
				<sec:authorize access="isAuthenticated()">
					<form action="${  pageContext.request.contextPath   }/joinus/logout.htm" method="post">                     
                       [<sec:authentication property="principal.username"/>] 님
                       <input type="hidden" name="${_csrf.parameterName }" value="${_csrf.token }">
                       <button>로그아웃</button>
         			</form> 
				</sec:authorize>
			</li>
			<!-- // 시큐리티 처리!! -->
			
			
	-------------------------------------
	
	login.jsp 에서  수정함.
	form 태그안의 형식들은 대부분 유지해야함.
	form action="/login" 필수, name속성 디비와 같게, input 태그 csrf 추가
	
		<form action="/login" method="post">
			<fieldset>
				<legend class="hidden">로그인 폼</legend>
				<h3>
					<img src="images/txtTitle.png" />
				</h3>
				<ul id="loginBox">
					<li><label for="id">아이디</label><input name="username"
						class="text" id="id" /></li>
					<li><label for="pwd">비밀번호</label><input type="password"
						name="password" class="text" id="pwd"/></li>
				</ul>
				<p>
					<input type="submit" id="btnLogin" value="" />
				</p>
				<ul id="loginOption">
					<li><span>아이디 또는 비밀번호를 분실하셨나요?</span><a href="/Member/FindID"><img
							alt="ID/PWD 찾기" src="images/btnFind.png" /></a></li>
					<li><span>아이디가 없으신 분은 회원가입을 해주세요.</span><a
						href="/Member/Agree"><img alt="회원가입" src="images/btnJoin.png" /></a></li>
				</ul>
			</fieldset>
			<input type="hidden" name="${_csrf.parameterName }" value="${_csrf.token }">
		</form>

















